{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","inputErrorTitle","inputErrorDescription","inputErrorImgUrl","inputErrorImdbUrl","inputErrorImdbId","activeButton","handleSubmit","event","validation","RegExp","preventDefault","split","length","setState","test","props","addMovie","onTitleChange","target","value","onDescriptionChange","onImgUrlChange","onImdbUrlChange","onImdbIdChange","buttonSwitch","this","onSubmit","onChange","htmlFor","id","disabled","type","Component","App","moviesFromServer","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.371c1d59.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    inputErrorTitle: false,\n    inputErrorDescription: false,\n    inputErrorImgUrl: false,\n    inputErrorImdbUrl: false,\n    inputErrorImdbId: false,\n    activeButton: true,\n  };\n\n  handleSubmit = (event) => {\n    const validation = new RegExp(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/);\n\n    event.preventDefault();\n    if (this.state.title.split('').length === 0) {\n      this.setState({ inputErrorTitle: true });\n    } else if (this.state.description.split('').length === 0) {\n      this.setState({ inputErrorDescription: true });\n    } else if (!validation.test(this.state.imgUrl)) {\n      this.setState({ inputErrorImgUrl: true });\n    } else if (!validation.test(this.state.imdbUrl)) {\n      this.setState({ inputErrorImdbUrl: true });\n    } else if (this.state.imdbId.split('').length === 0) {\n      this.setState({ inputErrorImdbId: true });\n    } else {\n      this.props.addMovie({\n        title: this.state.title,\n        description: this.state.description,\n        imgUrl: this.state.imdbUrl,\n        imdbUrl: this.state.imdbUrl,\n        imdbId: this.state.imdbId,\n      });\n      this.setState({\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n        activeButton: true,\n      });\n    }\n  }\n\n  onTitleChange = (event) => {\n    if (this.state.title.split('').length > 0) {\n      this.setState({ inputErrorTitle: false });\n    }\n\n    this.setState({\n      title: event.target.value,\n    });\n  }\n\n  onDescriptionChange = (event) => {\n    if (this.state.description.split('').length > 0) {\n      this.setState({ inputErrorDescription: false });\n    }\n\n    this.setState({\n      description: event.target.value,\n    });\n  }\n\n  onImgUrlChange = (event) => {\n    if (this.state.imgUrl.split('').length > 0) {\n      this.setState({ inputErrorImgUrl: false });\n    }\n\n    this.setState({\n      imgUrl: event.target.value,\n    });\n  }\n\n  onImdbUrlChange = (event) => {\n    if (this.state.imdbUrl.split('').length > 0) {\n      this.setState({ inputErrorImdbUrl: false });\n    }\n\n    this.setState({\n      imdbUrl: event.target.value,\n    });\n  }\n\n  onImdbIdChange = (event) => {\n    if (this.state.imdbId.split('').length > 0) {\n      this.setState({ inputErrorImdbId: false });\n    }\n\n    this.setState({\n      imdbId: event.target.value,\n    });\n  }\n\n  buttonSwitch = () => {\n    if (this.state.imdbId.split('').length > 0\n        && this.state.title.split('').length > 0\n        && this.state.description.split('').length > 0\n        && this.state.imgUrl.split('').length > 0\n        && this.state.imdbUrl.split('').length > 0) {\n      this.setState({ activeButton: false });\n    }\n  }\n\n  render() {\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} onChange={this.buttonSwitch}>\n        <label htmlFor=\"inputTitle\">Title:&nbsp;</label>\n        {this.state.inputErrorTitle && (<span className=\"inputError\">Please, enter the title!</span>)}\n        <input id=\"inputTitle\" className={`input ${this.state.inputErrorTitle && 'active'}`} value={title} onChange={this.onTitleChange} />\n        <label htmlFor=\"inputDescription\">Description:&nbsp;</label>\n        {this.state.inputErrorDescription && (<span className=\"inputError\">Please, enter the description!</span>)}\n        <input id=\"inputDescription\" className={`input ${this.state.inputErrorDescription && 'active'}`} value={description} onChange={this.onDescriptionChange} />\n        <label htmlFor=\"imgUrl\">ImgUrl:&nbsp;</label>\n        {this.state.inputErrorImgUrl && (<span className=\"inputError\">Please, enter correct ImgUrl!</span>)}\n        <input id=\"imgUrl\" className={`input ${this.state.inputErrorImgUrl && 'active'}`} value={imgUrl} onChange={this.onImgUrlChange} />\n        <label htmlFor=\"imdbUrl\">ImdbUrl:&nbsp;</label>\n        {this.state.inputErrorImdbUrl && (<span className=\"inputError\">Please, enter correct ImgUrl!</span>)}\n        <input id=\"imdbUrl\" className={`input ${this.state.inputErrorImdbUrl && 'active'}`} value={imdbUrl} onChange={this.onImdbUrlChange} />\n        <label htmlFor=\"idbId\">ImdbId:&nbsp;</label>\n        {this.state.inputErrorImdbId && (<span className=\"inputError\">Please, enter the ImgUrl!</span>)}\n        <input id=\"idbId\" className={`input ${this.state.inputErrorImdbId && 'active'}`} value={imdbId} onChange={this.onImdbIdChange} />\n        <button disabled={this.state.activeButton} type=\"submit\" className=\"button\">ADD</button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({ movies: [...prevState.movies, movie] }));\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}