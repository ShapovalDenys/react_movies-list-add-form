{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","validation","RegExp","validationTitle","NewMovie","state","inputErrorTitle","inputErrorDescription","inputErrorImgUrl","inputErrorImdbUrl","inputErrorImdbId","activeButton","handleSubmit","event","preventDefault","trim","length","setState","test","props","addMovie","onTitleChange","target","value","onDescriptionChange","onImgUrlChange","onImdbUrlChange","onImdbIdChange","buttonSwitch","this","onSubmit","onChange","htmlFor","id","classNames","active","disabled","type","Component","App","moviesFromServer","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.496af77d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst validation = new RegExp(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/);\nconst validationTitle = new RegExp(/\\w/);\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    inputErrorTitle: false,\n    inputErrorDescription: false,\n    inputErrorImgUrl: false,\n    inputErrorImdbUrl: false,\n    inputErrorImdbId: false,\n    activeButton: true,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { title, description, imdbId, imdbUrl, imgUrl } = this.state;\n\n    if (title.trim().length === 0) {\n      this.setState({ inputErrorTitle: true });\n    } else if (!validationTitle.test(title)) {\n      this.setState({ inputErrorTitle: true });\n    } else if (description.trim().length === 0) {\n      this.setState({ inputErrorDescription: true });\n    } else if (!validation.test(imgUrl)) {\n      this.setState({ inputErrorImgUrl: true });\n    } else if (!validation.test(imdbUrl)) {\n      this.setState({ inputErrorImdbUrl: true });\n    } else if (imdbId.trim().length === 0) {\n      this.setState({ inputErrorImdbId: true });\n    } else {\n      this.props.addMovie({\n        title,\n        description,\n        imgUrl,\n        imdbUrl,\n        imdbId,\n      });\n      this.setState({\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n        activeButton: true,\n      });\n    }\n  }\n\n  onTitleChange = (event) => {\n    if (this.state.title.length > 0) {\n      this.setState({ inputErrorTitle: false });\n    }\n\n    this.setState({\n      title: event.target.value,\n    });\n  }\n\n  onDescriptionChange = (event) => {\n    if (this.state.description.length > 0) {\n      this.setState({ inputErrorDescription: false });\n    }\n\n    this.setState({\n      description: event.target.value,\n    });\n  }\n\n  onImgUrlChange = (event) => {\n    if (this.state.imgUrl.length > 0) {\n      this.setState({ inputErrorImgUrl: false });\n    }\n\n    this.setState({\n      imgUrl: event.target.value,\n    });\n  }\n\n  onImdbUrlChange = (event) => {\n    if (this.state.imdbUrl.length > 0) {\n      this.setState({ inputErrorImdbUrl: false });\n    }\n\n    this.setState({\n      imdbUrl: event.target.value,\n    });\n  }\n\n  onImdbIdChange = (event) => {\n    if (this.state.imdbId.length > 0) {\n      this.setState({ inputErrorImdbId: false });\n    }\n\n    this.setState({\n      imdbId: event.target.value,\n    });\n  }\n\n  buttonSwitch = () => {\n    const { title, description, imdbId, imdbUrl, imgUrl } = this.state;\n\n    if (imdbId.trim().length > 0\n        && title.trim().length > 0\n        && description.trim().length > 0\n        && imgUrl.length > 0\n        && imdbUrl.length > 0) {\n      this.setState({ activeButton: false });\n    }\n  }\n\n  render() {\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} onChange={this.buttonSwitch}>\n\n        <label htmlFor=\"inputTitle\">Title:&nbsp;</label>\n        {this.state.inputErrorTitle\n        && (<span className=\"inputError\">Please, enter the title!</span>)}\n\n        <input\n          id=\"inputTitle\"\n          className={classNames('input', {active: this.state.inputErrorTitle})}\n          value={title}\n          onChange={this.onTitleChange}\n        />\n\n        <label htmlFor=\"inputDescription\">Description:&nbsp;</label>\n        {this.state.inputErrorDescription\n        && (<span className=\"inputError\">Please, enter the description!</span>)}\n\n        <input\n          id=\"inputDescription\"\n          className={classNames('input', {active: this.state.inputErrorDescription})}\n          value={description}\n          onChange={this.onDescriptionChange}\n        />\n\n        <label htmlFor=\"imgUrl\">ImgUrl:&nbsp;</label>\n        {this.state.inputErrorImgUrl\n        && (<span className=\"inputError\">Please, enter correct ImgUrl!</span>)}\n\n        <input\n          id=\"imgUrl\"\n          className={classNames('input', {active: this.state.inputErrorImgUrl})}\n          value={imgUrl}\n          onChange={this.onImgUrlChange}\n        />\n\n        <label htmlFor=\"imdbUrl\">ImdbUrl:&nbsp;</label>\n        {this.state.inputErrorImdbUrl\n        && (<span className=\"inputError\">Please, enter correct ImgUrl!</span>)}\n\n        <input\n          id=\"imdbUrl\"\n          className={classNames('input', {active: this.state.inputErrorImdbUrl})}\n          value={imdbUrl}\n          onChange={this.onImdbUrlChange}\n        />\n\n        <label htmlFor=\"idbId\">ImdbId:&nbsp;</label>\n        {this.state.inputErrorImdbId\n        && (<span className=\"inputError\">Please, enter the ImgUrl!</span>)}\n\n        <input\n          id=\"idbId\"\n          className={classNames('input', {active: this.state.inputErrorImdbId})}\n          value={imdbId}\n          onChange={this.onImdbIdChange}\n        />\n\n        <button\n          disabled={this.state.activeButton}\n          type=\"submit\"\n          className=\"button\"\n        >\n          ADD\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({ movies: [...prevState.movies, movie] }));\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}