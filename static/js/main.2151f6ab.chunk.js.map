{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","validation","RegExp","validationTitle","NewMovie","state","inputErrorTitle","inputErrorDescription","inputErrorImgUrl","inputErrorImdbUrl","inputErrorImdbId","activeButton","handleSubmit","event","preventDefault","setState","addMovie","props","onBlur","target","id","trim","length","test","onTitleChange","value","onDescriptionChange","onImgUrlChange","onImdbUrlChange","onImdbIdChange","buttonSwitch","this","onSubmit","onChange","htmlFor","classNames","active","required","disabled","type","Component","App","moviesFromServer","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2151f6ab.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst validation = new RegExp(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/);\nconst validationTitle = new RegExp(/\\w/);\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    inputErrorTitle: false,\n    inputErrorDescription: false,\n    inputErrorImgUrl: false,\n    inputErrorImdbUrl: false,\n    inputErrorImdbId: false,\n    activeButton: true,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    this.setState((state) => {\n\n      const { title, description, imdbId, imdbUrl, imgUrl } = state;\n      const { addMovie } = this.props;\n\n      addMovie({\n        title,\n        description,\n        imgUrl,\n        imdbUrl,\n        imdbId,\n      })\n\n      return {\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n        inputErrorTitle: false,\n        inputErrorDescription: false,\n        inputErrorImgUrl: false,\n        inputErrorImdbUrl: false,\n        inputErrorImdbId: false,\n      };\n    })\n  }\n\n  onBlur = ({target}) => {\n    const { title, description, imdbId, imdbUrl, imgUrl } = this.state;\n\n    if (target.id === 'inputTitle') {\n      if (title.trim().length === 0 && !validationTitle.test(title)) {\n        this.setState({ inputErrorTitle: true });\n      } else {\n        this.setState({ inputErrorTitle: false });\n      }\n    }\n\n    if (target.id === 'inputDescription') {\n      if (description.trim().length === 0) {\n        this.setState({ inputErrorDescription: true });\n      } else {\n        this.setState({ inputErrorDescription: false });\n      }\n    }\n\n    if (target.id === 'imgUrl') {\n      if (!validation.test(imgUrl)) {\n        this.setState({ inputErrorImgUrl: true });\n      } else {\n        this.setState({ inputErrorImgUrl: false });\n      }\n    }\n\n    if (target.id === 'imdbUrl') {\n      if (!validation.test(imdbUrl)) {\n        this.setState({ inputErrorImdbUrl: true });\n      } else {\n        this.setState({ inputErrorImdbUrl: false });\n      }\n    }\n\n    if (target.id === 'idbId') {\n      if (imdbId.trim().length === 0) {\n        this.setState({ inputErrorImdbId: true });\n      } else {\n        this.setState({ inputErrorImdbId: false });\n      }\n    }\n  }\n\n\n  onTitleChange = (event) => {\n    this.setState({\n      title: event.target.value,\n    });\n  }\n\n  onDescriptionChange = (event) => {\n    this.setState({\n      description: event.target.value,\n    });\n  }\n\n  onImgUrlChange = (event) => {\n    this.setState({\n      imgUrl: event.target.value,\n    });\n  }\n\n  onImdbUrlChange = (event) => {\n    this.setState({\n      imdbUrl: event.target.value,\n    });\n  }\n\n  onImdbIdChange = (event) => {\n    this.setState({\n      imdbId: event.target.value,\n    });\n  }\n\n  buttonSwitch = () => {\n    const { title, description, imdbId, imdbUrl, imgUrl } = this.state;\n\n    if ( title.trim().length > 0\n        && description.trim().length > 0\n        && validation.test(imgUrl)\n        && validation.test(imdbUrl)\n        && imdbId.trim().length > 0) {\n      this.setState({ activeButton: false });\n    }\n  }\n\n  render() {\n    const { title, description, imgUrl, imdbUrl, imdbId, activeButton } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} onChange={this.buttonSwitch}>\n\n        <label htmlFor=\"inputTitle\">Title:&nbsp;</label>\n        {this.state.inputErrorTitle\n        && (<span className=\"inputError\">Please, enter the title!</span>)}\n\n        <input\n          id=\"inputTitle\"\n          onBlur={this.onBlur}\n          className={classNames('input', {active: this.state.inputErrorTitle})}\n          value={title}\n          onChange={this.onTitleChange}\n          required\n        />\n\n        <label htmlFor=\"inputDescription\">Description:&nbsp;</label>\n        {this.state.inputErrorDescription\n        && (<span className=\"inputError\">Please, enter the description!</span>)}\n\n        <input\n          id=\"inputDescription\"\n          onBlur={this.onBlur}\n          className={classNames('input', {active: this.state.inputErrorDescription})}\n          value={description}\n          onChange={this.onDescriptionChange}\n          required\n        />\n\n        <label htmlFor=\"imgUrl\">ImgUrl:&nbsp;</label>\n        {this.state.inputErrorImgUrl\n        && (<span className=\"inputError\">Please, enter correct ImgUrl!</span>)}\n\n        <input\n          id=\"imgUrl\"\n          onBlur={this.onBlur}\n          className={classNames('input', {active: this.state.inputErrorImgUrl})}\n          value={imgUrl}\n          onChange={this.onImgUrlChange}\n          required\n        />\n\n        <label htmlFor=\"imdbUrl\">ImdbUrl:&nbsp;</label>\n        {this.state.inputErrorImdbUrl\n        && (<span className=\"inputError\">Please, enter correct ImgUrl!</span>)}\n\n        <input\n          id=\"imdbUrl\"\n          onBlur={this.onBlur}\n          className={classNames('input', {active: this.state.inputErrorImdbUrl})}\n          value={imdbUrl}\n          onChange={this.onImdbUrlChange}\n          required\n        />\n\n        <label htmlFor=\"idbId\">ImdbId:&nbsp;</label>\n        {this.state.inputErrorImdbId\n        && (<span className=\"inputError\">Please, enter the IdbId!</span>)}\n\n        <input\n          id=\"idbId\"\n          onBlur={this.onBlur}\n          className={classNames('input', {active: this.state.inputErrorImdbId})}\n          value={imdbId}\n          onChange={this.onImdbIdChange}\n          required\n        />\n\n        <button\n          disabled={activeButton}\n          type=\"submit\"\n          className=\"button\"\n        >\n          ADD\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({ movies: [...prevState.movies, movie] }));\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}